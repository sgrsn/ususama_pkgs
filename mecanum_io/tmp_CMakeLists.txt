cmake_minimum_required(VERSION 3.5)
project(mecanum_io)

# Default to C99
if(NOT CMAKE_C_STANDARD)
  set(CMAKE_C_STANDARD 99)
endif()

# Default to C++14
if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 14)
endif()

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(Eigen3 REQUIRED)
find_package(rclcpp REQUIRED)
find_package(geometry_msgs REQUIRED)

add_library(mecanum_io# SHARED
  #src/mecanum_io_demo.cpp
  #src/mecanum_node.cpp
)
target_compile_definitions(mecanum_io
  PRIVATE "MY_LIBRARY_BUILDING_LIBRARY"
)
target_compile_options(mecanum_io PUBLIC -Wall)
ament_target_dependencies(mecanum_io
  rclcpp geometry_msgs
)

target_include_directories(mecanum_io
  PUBLIC
  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include> # 通常の指定
  $<BUILD_INTERFACE:${EIGEN3_INCLUDE_DIR}> # Eigen3用の指定
  $<INSTALL_INTERFACE:include> # 通常指定
)

if(NOT WIN32)
  ament_environment_hooks(
    "${ament_cmake_package_templates_ENVIRONMENT_HOOK_LIBRARY_PATH}"
  )
endif()

#ament_export_interfaces(export_mecanum_io HAS_LIBRARY_TARGET)
ament_export_dependencies(rclcpp geometry_msgs)
ament_export_libraries(mecanum_io)
ament_export_include_directories(include)

install(
  DIRECTORY include/
  DESTINATION include
)
install(TARGETS
  mecanum_io
  EXPORT export_mecanum_io
  ARCHIVE DESTINATION lib
  LIBRARY DESTINATION lib
  RUNTIME DESTINATION bin
  INCLUDES DESTINATION include
)